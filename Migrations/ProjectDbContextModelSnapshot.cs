// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using diaTest.DataLayer;

#nullable disable

namespace diaTest.Migrations
{
    [DbContext(typeof(ProjectDbContext))]
    partial class ProjectDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("diaTest.Models.CariKart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Key")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "_key");

                    b.Property<string>("Unvan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "unvan");

                    b.Property<string>("VergiNumarasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "verginumarasi");

                    b.HasKey("Id");

                    b.ToTable("CariKart");

                    b.HasAnnotation("Relational:JsonPropertyName", "_key_scf_carikart");
                });

            modelBuilder.Entity("diaTest.Models.CariKartAdresi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adres1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "adres1");

                    b.Property<string>("Ilce")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ilce");

                    b.Property<int>("Key")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "_key");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "telefon1");

                    b.HasKey("Id");

                    b.ToTable("CariKartAdresi");

                    b.HasAnnotation("Relational:JsonPropertyName", "_key_scf_carikart_adresleri");
                });

            modelBuilder.Entity("diaTest.Models.CariTablo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "adresbilgi");

                    b.Property<string>("CariAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "unvan");

                    b.Property<string>("DovizTuru")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "dovizturu");

                    b.Property<string>("Eposta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "eposta");

                    b.Property<string>("FirmaAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "firmaadi");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "_key");

                    b.Property<string>("Ulke")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ulke");

                    b.Property<string>("VergiDairesi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "vergidairesi");

                    b.Property<string>("VergiNumarasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "verginumarasi");

                    b.HasKey("Id");

                    b.ToTable("CariTablo");
                });

            modelBuilder.Entity("diaTest.Models.Fatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CariKartAdresiId")
                        .HasColumnType("int");

                    b.Property<int>("CariKartId")
                        .HasColumnType("int");

                    b.Property<int>("Key")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "_key");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "_date");

                    b.Property<string>("Toplam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "toplam");

                    b.Property<string>("ToplamKdv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "toplamkdv");

                    b.HasKey("Id");

                    b.HasIndex("CariKartAdresiId");

                    b.HasIndex("CariKartId");

                    b.ToTable("Fatura");
                });

            modelBuilder.Entity("diaTest.Models.FaturaTablo", b =>
                {
                    b.Property<int>("FaturaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FaturaId"));

                    b.Property<string>("BekleyenTutar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "bekleyentutar");

                    b.Property<string>("CariFirma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "__carifirma");

                    b.Property<string>("CariId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "_key_scf_carikart");

                    b.Property<string>("CariVergiDairesi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "__carivergidairesi");

                    b.Property<string>("CariVergiNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "__cariverginumarasi");

                    b.Property<string>("DovizKuru")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "dovizkuru");

                    b.Property<string>("DovizTuru")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "dovizturu");

                    b.Property<string>("FaturaSecretKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "faturasecretkey");

                    b.Property<string>("FirmaAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "firmaadi");

                    b.Property<string>("FisNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "fisno");

                    b.Property<string>("KalanTaksitTutar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "kalantutar_taksit");

                    b.Property<string>("NetDoviz")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "netdvz");

                    b.Property<string>("SevkAdresi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "sevkadresi");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "tarih");

                    b.Property<string>("Toplam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "toplam");

                    b.Property<string>("ToplamDoviz")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "toplamdvz");

                    b.Property<string>("ToplamKdv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "toplamkdv");

                    b.Property<string>("ToplamMiktar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "toplammiktar");

                    b.Property<string>("ToplamPara")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "toplamara");

                    b.Property<string>("ToplamParaDoviz")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "toplamaradvz");

                    b.HasKey("FaturaId");

                    b.ToTable("FaturaTablo");
                });

            modelBuilder.Entity("diaTest.Models.Fatura", b =>
                {
                    b.HasOne("diaTest.Models.CariKartAdresi", "CariKartAdresi")
                        .WithMany()
                        .HasForeignKey("CariKartAdresiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("diaTest.Models.CariKart", "CariKart")
                        .WithMany()
                        .HasForeignKey("CariKartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CariKart");

                    b.Navigation("CariKartAdresi");
                });
#pragma warning restore 612, 618
        }
    }
}
